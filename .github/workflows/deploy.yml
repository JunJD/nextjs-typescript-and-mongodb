name: Deploy to Aliyun

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      - name: Install Dependencies
        run: npm install
          
      - name: Build
        run: npm run build

      - name: Login to Aliyun Container Registry
        uses: aliyun/acr-login@v1
        with:
          login-server: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Build and push image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t crpi-ne97tccqwbmfjjvf.cn-shanghai.personal.cr.aliyuncs.com/temple_22/temple-h5-editor:$IMAGE_TAG .
          docker push crpi-ne97tccqwbmfjjvf.cn-shanghai.personal.cr.aliyuncs.com/temple_22/temple-h5-editor:$IMAGE_TAG

      - name: Deploy to ECS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ECS_HOST }}
          username: ${{ secrets.ECS_USERNAME }}
          key: ${{ secrets.ECS_SSH_KEY }}
          script: |
            # 确保目录存在
            mkdir -p /app/temple-h5-editor
            cd /app/temple-h5-editor
            
            # 创建或更新 docker-compose.yml
            cat > docker-compose.yml << 'EOL'
            version: '3.8'
            services:
              web:
                image: crpi-ne97tccqwbmfjjvf.cn-shanghai.personal.cr.aliyuncs.com/temple_22/temple-h5-editor:${IMAGE_TAG}
                ports:
                  - "3000:3000"
                environment:
                  - MONGO_URI=${MONGO_URI}
                  - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
                  - NEXTAUTH_URL=${NEXTAUTH_URL}
                  - GOOGLE_APP_CLIENT_ID=${GOOGLE_APP_CLIENT_ID}
                  - GOOGLE_APP_CLIENT_SECRET=${GOOGLE_APP_CLIENT_SECRET}
                restart: always
            EOL
            
            # 设置环境变量
            echo "IMAGE_TAG=${{ github.sha }}" > .env
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
            echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
            echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
            echo "GOOGLE_APP_CLIENT_ID=${{ secrets.GOOGLE_APP_CLIENT_ID }}" >> .env
            echo "GOOGLE_APP_CLIENT_SECRET=${{ secrets.GOOGLE_APP_CLIENT_SECRET }}" >> .env
            
            # 拉取新镜像并重启服务
            docker-compose pull
            docker-compose up -d